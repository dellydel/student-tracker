service: serverless
frameworkVersion: '3'

provider:
  name: aws
  runtime: python3.11
  stackName: serverless-${opt:stage}
  environment: ${file(env.yml):${self:custom.stage}}
  apiGateway:
    restApiId: ${ssm:nextbyte-api-restApiId-${opt:stage}}
    restApiRootResourceId: ${ssm:nextbyte-api-restApiRootResourceId-${opt:stage}}
  iam:
    role: IAMServerlessRole
custom:
  stage: ${opt:stage, self:provider.stage}

package:
  individually: true
  patterns:
    - '!./**'
    - 'src/http_response.py'
    - '!package.json'
    - '!package-lock.json'
    - '!node_modules/**'

functions:
  ping:
    name: ping-lambda-${opt:stage}   
    package:
      patterns:
        - src/ping.py
    handler: src/ping.handler
    events:
      - http:
          path: /ping
          method: get
  contact-lambda-python:
      name: contact-lambda-python-${opt:stage}
      package:
        patterns:
          - 'src/contact.py'
          - 'src/contact_handler.py'
      handler: src/contact_handler.handler
      events:
        - http:
            path: /contact-python
            method: post
            cors: true
resources:
  - Resources:
      IAMServerlessRole:
        Type: AWS::IAM::Role
        Properties:
          AssumeRolePolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Principal:
                  Service:
                    - lambda.amazonaws.com
                Action:
                  - sts:AssumeRole
          Policies:
            - PolicyName: Policy_api-lambda-db
              PolicyDocument:
                Version: '2012-10-17'
                Statement:
                  - Effect: Allow
                    Action:
                      - dynamodb:BatchGetItem
                      - dynamodb:BatchWriteItem
                      - dynamodb:TagResource
                      - dynamodb:UntagResource
                      - dynamodb:PutItem
                      - dynamodb:DeleteItem
                      - dynamodb:GetItem
                      - dynamodb:Scan
                      - dynamodb:Query
                      - dynamodb:UpdateItem
                    Resource:
                      - arn:aws:dynamodb:us-east-1:893303684985:table/next-byte-Students-${opt:stage}
                      - arn:aws:dynamodb:us-east-1:893303684985:table/next-byte-Courses-${opt:stage}
                      - arn:aws:dynamodb:us-east-1:893303684985:table/next-byte-Registrations-${opt:stage}
                      - arn:aws:dynamodb:us-east-1:893303684985:table/next-byte-Contact-${opt:stage}
                      - arn:aws:dynamodb:us-east-1:893303684985:table/next-byte-Students-${opt:stage}/index/EmailIndex
                  - Effect: Allow
                    Action:
                      - logs:CreateLogStream
                      - logs:CreateLogGroup
                      - logs:PutLogEvents
                    Resource: '*'
                  - Effect: Allow
                    Action:
                      - s3:GetObject
                      - s3:ListBucket
                    Resource:
                      - arn:aws:s3:::nextbyte-course-materials
                      - arn:aws:s3:::nextbyte-course-materials/*
                  - Effect: Allow
                    Action:
                      - sns:Publish
                    Resource:
                      - arn:aws:sns:us-east-1:893303684985:ContactTopic-${opt:stage}

plugins:
  - serverless-python-requirements
